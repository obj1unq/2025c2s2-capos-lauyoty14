import capos.* 

describe "test de ronaldo parte 1" {
  test "ejercicio 1.1" {
    rolando.mochila([])
    rolando.encontrarArtefacto(espadaDelDestino)
    rolando.encontrarArtefacto(libroDeHechizos)
    assert.throwsException({ rolando.encontrarArtefacto(collarDivino) })
    assert.equals([espadaDelDestino, libroDeHechizos], rolando.mochila())
  }

  test "ejercicio 1.2" {
    rolando.mochila([])
    rolando.encontrarArtefacto(espadaDelDestino)
    rolando.encontrarArtefacto(libroDeHechizos)
    rolando.llegarAlCastilloYGuardar()
    rolando.encontrarArtefacto(collarDivino)
    rolando.llegarAlCastilloYGuardar()
    assert.equals(castilloDePiedra.almacenDeArtefactos(), [espadaDelDestino, libroDeHechizos, collarDivino])
  }

  test "ejercicio 1.3" {
    rolando.mochila([])
    rolando.encontrarArtefacto(collarDivino)
    rolando.encontrarArtefacto(espadaDelDestino)
    rolando.llegarAlCastilloYGuardar()
    rolando.encontrarArtefacto(armaduraDeAceroValyrio)
    assert.equals(rolando.todosLosArtefactos(), [collarDivino, espadaDelDestino, armaduraDeAceroValyrio])
    assert.notThat(rolando.tieneElArtefacto(libroDeHechizos))
  }

  test "ejercicio 1.4" {
    rolando.mochila([])
    rolando.encontrarArtefacto(espadaDelDestino)
    rolando.encontrarArtefacto(libroDeHechizos)
    assert.throwsException({ rolando.encontrarArtefacto(collarDivino) })
    rolando.llegarAlCastilloYGuardar()
    rolando.encontrarArtefacto(armaduraDeAceroValyrio)
    rolando.encontrarArtefacto(collarDivino)
    assert.equals(rolando.historialDeArtefactos(), [espadaDelDestino, libroDeHechizos, collarDivino, armaduraDeAceroValyrio, collarDivino])
  }
}

describe "test rolando parte 2" {
    method initialize(){
    rolando.tama単oDeMochila(3)
    rolando.encontrarArtefacto(espadaDelDestino)
    rolando.encontrarArtefacto(armaduraDeAceroValyrio)
    rolando.encontrarArtefacto(collarDivino)
  }
  test "ejercicio 2.1" {
    assert.equals(5, espadaDelDestino.poderArtefacto(rolando))
    assert.equals(6, armaduraDeAceroValyrio.poderArtefacto(rolando))
    assert.equals(3, collarDivino.poderArtefacto(rolando))
    rolando.batallar()
    assert.equals(6, rolando.poderBase())
    assert.equals(3, espadaDelDestino.poderArtefacto(rolando))
    assert.equals(6, armaduraDeAceroValyrio.poderArtefacto(rolando))
    assert.equals(3, collarDivino.poderArtefacto(rolando))
    rolando.batallar()
    assert.equals(7, rolando.poderBase())
    assert.equals(3.5, espadaDelDestino.poderArtefacto(rolando))
    assert.equals(6, armaduraDeAceroValyrio.poderArtefacto(rolando))
    assert.equals(5, collarDivino.poderArtefacto(rolando))
    rolando.batallar()
    assert.equals(8, rolando.poderBase())
    assert.equals(4, espadaDelDestino.poderArtefacto(rolando))
    assert.equals(6, armaduraDeAceroValyrio.poderArtefacto(rolando))
    assert.equals(6, collarDivino.poderArtefacto(rolando))   
  }
  test "rolando parte 2: batalla" {
    assert.equals(19, rolando.poderDePelea())
  }
  test "rolando parte2 : 2.2" {
    rolando.llegarAlCastilloYGuardar()
    rolando.encontrarArtefacto(libroDeHechizos)
    libroDeHechizos.a単adirHechizo(hechizoBendicion)
    libroDeHechizos.a単adirHechizo(hechizoInvisibilidad)
    libroDeHechizos.a単adirHechizo(hechizoInvocacion)
    assert.equals(4, libroDeHechizos.poderArtefacto(rolando))
    rolando.batallar()
    assert.equals(6, libroDeHechizos.poderArtefacto(rolando))
    rolando.batallar()
    assert.equals(7, libroDeHechizos.poderArtefacto(rolando))
    rolando.batallar()
    assert.equals(0, libroDeHechizos.poderArtefacto(rolando))
  }

  test "rolando parte2 : 2.3" {
    assert.equals(rolando.enemigosQuePuedeVencer().asSet(), #{archibaldo, astra})
    assert.equals(rolando.moradasConquistables().asSet(), #{palacioDeMarmol, torreDeMarfil})   
  }

  test "ronaldo parte2 : 2.5" {
    rolando.poderBase(15)
    assert.that(rolando.tieneArtefactoFatal(astra))
    assert.that(rolando.tieneArtefactoFatal(caterina))
  }
}